/* Generated by Myra UI Editor at 7/26/2017 12:21:01 AM */

using System;
using Jord.Storage;
using Myra;
using Myra.Graphics2D.UI;
using Jord.Core;
using System.Linq;

namespace Jord.UI
{
	public partial class MainMenu : Grid
	{
		private VerticalMenu _selectSlotMenu;
		private int _selectedSlotIndex;
		
		public MainMenu()
		{
			BuildUI();

			_playItem.Selected += PlayOnSelected;

			_quitMenuItem.Selected += QuitMenuItemOnSelected;

			_textVersion.Text = "Version " + TJ.Version;
		}

		private void PlayOnSelected(object sender, EventArgs eventArgs)
		{
			_selectSlotMenu = new VerticalMenu
			{
				VerticalAlignment = VerticalAlignment.Center,
				HorizontalAlignment = HorizontalAlignment.Center
			};

			for (var i = 0; i < StorageService.SlotsCount; ++i)
			{
				var slot = TJ.StorageService.Slots[i];
				var name = slot.PlayerData == null ? Strings.EmptySlotName :
					slot.PlayerData.Name + ", " + slot.PlayerData.ClassId;
				var menuItem = new MenuItem(string.Empty, name);

				var i1 = i;
				menuItem.Selected += (o, args) =>
				{
					Play(i1);
				};
				_selectSlotMenu.Items.Add(menuItem);
			}

			var back = new MenuItem(string.Empty, Strings.BackName);
			back.Selected += (o, args) =>
			{
				Widgets.Remove(_selectSlotMenu);
				Widgets.Add(_mainMenu);
			};
			_selectSlotMenu.Items.Add(back);

			Widgets.Remove(_mainMenu);
			Widgets.Add(_selectSlotMenu);
		}

		private void Play(int slotIndex)
		{
			_selectedSlotIndex = slotIndex;
			var slot = TJ.StorageService.Slots[slotIndex];
			if (slot.PlayerData == null)
			{
				var dlg = new CharacterGenerationDialog();

				dlg.Closed += (s, a) =>
				{
					if (!dlg.Result)
					{
						return;
					}

					// var cls = (Class) dlg._comboClass.SelectedItem.Tag;
					var cls = TJ.Database.Classes.First().Value;
					var data = new PlayerData
					{
						Name = dlg._textName.Text,
						Level = 1,
						ClassId = cls.Id,
						Gold = cls.Gold
					};

					if (cls.Perks != null && cls.Perks.Length > 0)
					{
						data.Perks.AddRange(from p in cls.Perks select p.Id);
					}

					foreach(var pair in cls.Equipment.Items)
					{
						if (pair.Item != null)
						{
							data.Equipment[pair.Slot] = pair.Item.Info.Id;
						}
					}

					slot.PlayerData = data;
					slot.Save();

					JordGame.Instance.Play(slotIndex);
				};

				dlg.ShowModal(Desktop);
				Desktop.FocusedKeyboardWidget = dlg._textName;
			}
			else
			{
				JordGame.Instance.Play(slotIndex);
			}
		}

		private void QuitMenuItemOnSelected(object sender, EventArgs eventArgs)
		{
			MyraEnvironment.Game.Exit();
		}
	}
}