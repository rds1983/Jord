/* Generated by MyraPad at 8/25/2020 11:30:10 PM */
using Myra.Graphics2D;
using Myra.Graphics2D.TextureAtlases;
using Myra.Graphics2D.UI;
using Myra.Graphics2D.Brushes;

#if !XENKO
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
#else
using Xenko.Core.Mathematics;
#endif

namespace Jord.UI
{
	partial class AbilitiesWindow: Window
	{
		private void BuildUI()
		{
			var horizontalSeparator1 = new HorizontalSeparator();

			var listItem1 = new ListItem();
			listItem1.Text = "Double Attack";

			var listItem2 = new ListItem();
			listItem2.Text = "Parry";
			listItem2.Color = Color.Red;

			var listItem3 = new ListItem();
			listItem3.Text = "Spell 'Cure Light Wounds'";

			var listItem4 = new ListItem();
			listItem4.Text = "Spell 'Cure Minor Wounds'";

			var listItem5 = new ListItem();
			listItem5.Text = "Spell 'Cure Normal Wounds'";

			var listItem6 = new ListItem();
			listItem6.Text = "Spell 'Cure Serious Wounds'";

			_listAbilities = new ListBox();
			_listAbilities.Width = 250;
			_listAbilities.Id = "_listAbilities";
			_listAbilities.Items.Add(listItem1);
			_listAbilities.Items.Add(listItem2);
			_listAbilities.Items.Add(listItem3);
			_listAbilities.Items.Add(listItem4);
			_listAbilities.Items.Add(listItem5);
			_listAbilities.Items.Add(listItem6);

			var verticalSeparator1 = new VerticalSeparator();

			_labelEnergyCost = new Label();
			_labelEnergyCost.Text = "0 Energy";
			_labelEnergyCost.Id = "_labelEnergyCost";

			var horizontalSeparator2 = new HorizontalSeparator();

			_labelType = new Label();
			_labelType.Text = "On/Off";
			_labelType.Id = "_labelType";

			var horizontalSeparator3 = new HorizontalSeparator();

			_labelManual = new Label();
			_labelManual.Text = "Glowing green spellbook";
			_labelManual.Id = "_labelManual";

			var horizontalSeparator4 = new HorizontalSeparator();

			_labelDescription = new Label();
			_labelDescription.Text = "Replaces first attack with parry, which blocks first attack of enemy with almost 100% guarantee.";
			_labelDescription.Wrap = true;
			_labelDescription.Id = "_labelDescription";

			var verticalStackPanel1 = new VerticalStackPanel();
			verticalStackPanel1.Spacing = 4;
			verticalStackPanel1.Width = 350;
			verticalStackPanel1.Widgets.Add(_labelEnergyCost);
			verticalStackPanel1.Widgets.Add(horizontalSeparator2);
			verticalStackPanel1.Widgets.Add(_labelType);
			verticalStackPanel1.Widgets.Add(horizontalSeparator3);
			verticalStackPanel1.Widgets.Add(_labelManual);
			verticalStackPanel1.Widgets.Add(horizontalSeparator4);
			verticalStackPanel1.Widgets.Add(_labelDescription);

			var horizontalStackPanel1 = new HorizontalStackPanel();
			horizontalStackPanel1.Widgets.Add(_listAbilities);
			horizontalStackPanel1.Widgets.Add(verticalSeparator1);
			horizontalStackPanel1.Widgets.Add(verticalStackPanel1);

			var horizontalSeparator5 = new HorizontalSeparator();

			_buttonUse = new TextButton();
			_buttonUse.Text = "Use";
			_buttonUse.Width = 100;
			_buttonUse.Id = "_buttonUse";

			var horizontalStackPanel2 = new HorizontalStackPanel();
			horizontalStackPanel2.Widgets.Add(_buttonUse);

			var verticalStackPanel2 = new VerticalStackPanel();
			verticalStackPanel2.Proportions.Add(new Proportion
			{
				Type = Myra.Graphics2D.UI.ProportionType.Auto,
			});
			verticalStackPanel2.Proportions.Add(new Proportion
			{
				Type = Myra.Graphics2D.UI.ProportionType.Fill,
			});
			verticalStackPanel2.Widgets.Add(horizontalSeparator1);
			verticalStackPanel2.Widgets.Add(horizontalStackPanel1);
			verticalStackPanel2.Widgets.Add(horizontalSeparator5);
			verticalStackPanel2.Widgets.Add(horizontalStackPanel2);

			
			Title = "Abilities";
			IsDraggable = false;
			Left = 286;
			Top = 60;
			Width = 600;
			Height = 300;
			Content = verticalStackPanel2;
		}

		
		public ListBox _listAbilities;
		public Label _labelEnergyCost;
		public Label _labelType;
		public Label _labelManual;
		public Label _labelDescription;
		public TextButton _buttonUse;
	}
}